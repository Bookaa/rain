macro print_all(args) as (args)
  let node = ast.block:empty()
  save node

  for arg in args:items()
    let call = ast.call:new(ast.name:new("print"), table)
    call.args[0] = arg
    node:add(call)

macro call(expr, argblock) as (fn, args)
  return ast.call:new(fn, args)

macro catchcall(expr, argblock) as (fn, args)
  return ast.catchcall:new(fn, args)
