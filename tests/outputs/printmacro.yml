!program;1
stmts:
- !macro;1
  body: !block;1
    stmts:
    - !assn;2
      export: false
      let: true
      lhs: !name;1
        value: node
      rhs: !table;1
        parent: null
    - !assn;2
      export: false
      let: false
      lhs: !index;1
        lhs: !name;1
          value: node
        rhs: !str;1
          value: tag
      rhs: !str;1
        value: block
    - !assn;2
      export: false
      let: false
      lhs: !index;1
        lhs: !name;1
          value: node
        rhs: !str;1
          value: stmts
      rhs: !table;1
        parent: null
    - !save;1
      value: !name;1
        value: node
    - !assn;2
      export: false
      let: true
      lhs: !name;1
        value: i
      rhs: !int;1
        value: 0
    - !assn;2
      export: false
      let: true
      lhs: !name;1
        value: call
      rhs: !null;1 {}
    - !while;1
      body: !block;1
        stmts:
        - !assn;2
          export: false
          let: false
          lhs: !name;1
            value: call
          rhs: !table;1
            parent: null
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !name;1
              value: call
            rhs: !str;1
              value: tag
          rhs: !str;1
            value: call
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !name;1
              value: call
            rhs: !str;1
              value: func
          rhs: !table;1
            parent: null
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !index;1
              lhs: !name;1
                value: call
              rhs: !str;1
                value: func
            rhs: !str;1
              value: tag
          rhs: !str;1
            value: name
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !index;1
              lhs: !name;1
                value: call
              rhs: !str;1
                value: func
            rhs: !str;1
              value: value
          rhs: !str;1
            value: print
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !name;1
              value: call
            rhs: !str;1
              value: args
          rhs: !table;1
            parent: null
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !index;1
              lhs: !name;1
                value: call
              rhs: !str;1
                value: args
            rhs: !int;1
              value: 0
          rhs: !index;1
            lhs: !name;1
              value: args
            rhs: !name;1
              value: i
        - !assn;2
          export: false
          let: false
          lhs: !index;1
            lhs: !index;1
              lhs: !name;1
                value: node
              rhs: !str;1
                value: stmts
            rhs: !name;1
              value: i
          rhs: !name;1
            value: call
        - !assn;2
          export: false
          let: false
          lhs: !name;1
            value: i
          rhs: !binary;1
            lhs: !name;1
              value: i
            op: +
            rhs: !int;1
              value: 1
      pred: !binary;1
        lhs: !index;1
          lhs: !name;1
            value: args
          rhs: !name;1
            value: i
        op: '!='
        rhs: !null;1 {}
  name: printall
  params:
  - args
  types:
  - args
- !assn;2
  export: false
  let: true
  lhs: !name;1
    value: main
  rhs: !func;1
    body: !block;1
      stmts:
      - !block;1
        stmts:
        - !call;1
          args:
          - !str;1
            value: one
          catch: null
          func: !name;1
            value: print
        - !call;1
          args:
          - !str;1
            value: two
          catch: null
          func: !name;1
            value: print
        - !call;1
          args:
          - !str;1
            value: THREE
          catch: null
          func: !name;1
            value: print
        - !call;1
          args:
          - !str;1
            value: four
          catch: null
          func: !name;1
            value: print
    params: []
